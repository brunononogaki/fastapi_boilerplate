[tool.poetry]
name = "fastapi_boilerplate"
version = "0.1.0"
description = ""
authors = ["Bruno Nonogaki <bruno.nonogaki@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.13,<4.0"
fastapi = {extras = ["standard"], version = "^0.116.1"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.43"}
pydantic-settings = "^2.10.1"
psycopg = {extras = ["binary"], version = "^3.2.9"}
pyjwt = "^2.10.1"
pwdlib = {extras = ["argon2"], version = "^0.2.1"}
loguru = "^0.7.3"
asyncpg = "^0.30.0"
httpx = "^0.28.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.12.11"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
taskipy = "^1.14.1"
pytest-asyncio = "^1.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 119
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'

[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev fastapi_boilerplate/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fastapi_boilerplate -vv'
post_test = 'coverage html'